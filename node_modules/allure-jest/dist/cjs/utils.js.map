{"version":3,"file":"utils.js","names":["_allureJsCommons","require","_sdk","getTestPath","test","path","currentUnit","name","unshift","parent","slice","exports","getTestId","join","getTestFullName","jestHookPattern","jestHookLegacyPattern","shouldHookBeSkipped","hook","_stack$split","stackOrError","asyncError","stack","errorFirstLine","split","trim","last","array","length","isTestPresentInTestPlan","testFullName","testPlan","labels","extractMetadataFromString","allureIdLabel","find","_ref","LabelName","ALLURE_ID","tests","some","_ref2","id","selector","idMatched","String","value","selectorMatched"],"sources":["../../src/utils.ts"],"sourcesContent":["import type { Circus } from \"@jest/types\";\nimport { LabelName } from \"allure-js-commons\";\nimport { extractMetadataFromString } from \"allure-js-commons/sdk\";\nimport type { TestPlanV1 } from \"allure-js-commons/sdk\";\n\n/**\n * Returns array of names which represents full test hierarchy\n * Omits ROOT_DESCRIBE_BLOCK because it shouldn't be reported\n *\n * @param test Test or describe block\n * @returns\n */\nexport const getTestPath = (test: Circus.TestEntry | Circus.DescribeBlock): string[] => {\n  const path = [];\n  let currentUnit: Circus.DescribeBlock | Circus.TestEntry | undefined = test;\n\n  while (currentUnit) {\n    if (currentUnit.name) {\n      path.unshift(currentUnit.name);\n    }\n\n    currentUnit = currentUnit.parent;\n  }\n\n  // debugger\n\n  // first element is always ROOT_DESCRIBE_BLOCK, which shouldn't be reported\n  return path.slice(1);\n};\n\n/**\n * Returns starndartized test name what can be used as test Id\n *\n * @doc https://github.com/jestjs/jest/blob/25a8785584c9d54a05887001ee7f498d489a5441/packages/jest-circus/src/utils.ts#L410\n * @param path Path memebers\n * @returns\n */\nexport const getTestId = (path: string[]): string => path.join(\" \");\n\n/**\n * Returns test full name (test hierarchy joined by \" > \")\n *\n * @param path Path memebers\n * @returns\n */\nexport const getTestFullName = (path: string[]): string => path.join(\" > \");\n\nconst jestHookPattern = /^at jestAdapter/i;\n// A slightly different reference should be used to identify jestAdapter's global hook in some older versions of Jest.\nconst jestHookLegacyPattern = /jest-circus\\/build\\/legacy-code-todo-rewrite\\/jestAdapter.js:\\d+:\\d+$/;\n\nexport const shouldHookBeSkipped = (hook: Circus.Hook): boolean => {\n  // In older versions of Jest the hook's stack is direcrly in asyncError. In newer ones - in asyncError.stack.\n  const stackOrError: string | Error | undefined = hook?.asyncError;\n  const stack = typeof stackOrError === \"string\" ? stackOrError : stackOrError?.stack;\n  const errorFirstLine = stack?.split(\"\\n\")?.[1]?.trim() || \"\";\n\n  return jestHookPattern.test(errorFirstLine) || jestHookLegacyPattern.test(errorFirstLine);\n};\n\nexport const last = <T>(array: T[]): T => array[array.length - 1];\n\nexport const isTestPresentInTestPlan = (testFullName: string, testPlan: TestPlanV1) => {\n  const { labels } = extractMetadataFromString(testFullName);\n  const allureIdLabel = labels.find(({ name }) => name === LabelName.ALLURE_ID);\n\n  return testPlan.tests.some(({ id, selector = \"\" }) => {\n    const idMatched = id ? String(id) === allureIdLabel?.value : false;\n    const selectorMatched = selector === testFullName;\n\n    return idMatched || selectorMatched;\n  });\n};\n"],"mappings":"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","ignoreList":[]}